{{- if .Values.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "opendkim.fullname" . }}
  namespace: {{ .Release.Namespace }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "opendkim.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "opendkim.selectorLabels" . | nindent 8 }}
        {{- if .Values.additionalLabels -}}
          {{- toYaml .Values.additionalLabels | nindent 8 }}
        {{- end }}
    {{- if .Values.additionalTemplateSpec -}}
      {{- toYaml .Values.additionalTemplateSpec | nindent 4 }}
    {{- end }}
    spec:
      {{- if .Values.affinity.enabled -}}
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: {{ .Values.affinity.nodeLabel }}
                operator: In
                values:
                {{- toYaml .Values.affinity.nodeValues | nindent 12 }}
      {{- end }}
      {{- if .Values.additionalPodSpec -}}
        {{- toYaml .Values.additionalPodSpec | nindent 6 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: "{{ .Values.image.name }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
        - name: DKIM_DOMAIN
          value: "{{ .Values.defaultDomain }}"
        - name: DKIM_DB_HOST
          value: "{{ include "opendkim.dbHostname" . }}"
{{- if .Values.dbSecret.name }}
        - name: DKIM_DB_USER
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.dbSecret.name }}"
              key: "{{ .Values.dbSecret.usernameKey }}"
        - name: DKIM_DB_PASS
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.dbSecret.name }}"
              key: "{{ .Values.dbSecret.passwordKey }}"
        - name: DKIM_SETUP_PASS
          valueFrom:
            secretKeyRef:
              name: "{{ .Values.dbSecret.name }}"
              key: "{{ .Values.dbSecret.setupPasswordKey }}"
{{- else }}
        - name: DKIM_DB_USER
          value: "{{ .Values.dbUser }}"
        - name: DKIM_DB_PASS
          value: "{{ .Values.dbPassword }}"
        - name: DKIM_SETUP_PASS
          value: "{{ .Values.dbSetupPassword }}"
{{- end }}
        - name: DKIM_DB_NAME
          value: "{{ .Values.dbName }}"
        ports:
        - name: opendkim
          containerPort: 41001
        - name: http
          containerPort: 80
        {{- if .Values.additionalContainerSpec -}}
          {{- toYaml .Values.additionalContainerSpec | nindent 8 }}
        {{- end }}
        resources:
            {{- toYaml .Values.resources | nindent 10 }}
{{- end }}
